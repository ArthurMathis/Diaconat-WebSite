-- On génère la table Roles contenant les droits d'accès des Utilisateurs --
CREATE TABLE Roles (
	Id_Role INTEGER AUTO_INCREMENT PRIMARY KEY,
    Intitule_Role VARCHAR(32) NOT NULL UNIQUE
);

-- On génère la table Utilisateurs contenant les informations de chaque Utilisateurs de l'application --
CREATE TABLE Utilisateurs (
	Id_Utilisateurs INTEGER AUTO_INCREMENT PRIMARY KEY,
    Identifiant_Utilisateurs VARCHAR(64) NOT NULL,
    Nom_Utilisateurs VARCHAR(64) NOT NULL,
    Prenom_Utilisateurs VARCHAR(64) NOT NULL,
    MotDePasse_Utilisateurs VARCHAR(256) NOT NULL,
    Email_Utilisateurs VARCHAR(64) UNIQUE,
    MotDePasseTemp_Utilisateurs BOOLEAN DEFAULT TRUE,

    Cle_Roles INTEGER NOT NULL,
    Cle_Etablissements INTEGER NOT NULL,

    FOREIGN KEY (Cle_Roles) REFERENCES Roles(Id_Role),
    FOREIGN KEY (Cle_Etablissements) REFERENCES Etablissements(Id_Etablissements)
);

-- On génère la table Types contenant les types d'actions réalisable par un Utilisateur --
CREATE TABLE Types (
	Id_Types INTEGER AUTO_INCREMENT PRIMARY KEY,
    Intitule_Types VARCHAR(32) NOT NULL UNIQUE
);

-- On génère la table Instants stockant les dates et heures d'événements --
CREATE TABLE Instants (
	Id_Instants INTEGER AUTO_INCREMENT PRIMARY KEY,
    Jour_Instants DATE NOT NULL,
    Heure_Instants TIME NOT NULL
);

-- On génère la table Actions stockant les actions des Utilisateurs --
CREATE TABLE Actions (
	Cle_Utilisateurs INTEGER NOT NULL,
    Cle_Types INTEGER NOT NULL,
    CLe_Instants INTEGER NOT NULL,
    
    FOREIGN KEY (Cle_Utilisateurs) REFERENCES Utilisateurs(Id_Utilisateurs),
    FOREIGN KEY (Cle_Types) REFERENCES Types(Id_Types),
    FOREIGN KEY (CLe_Instants) REFERENCES Instants(Id_Instants),

    PRIMARY KEY(Cle_Utilisateurs, Cle_Types, Cle_Instants)
);

-- On génère la table Travail_das stockant l'Etablissement de travail d'un Utilisateur --
CREATE TABLE Travail_dans (
    Cle_Utilisateurs INTEGER NOT NULL,
    Cle_Etablissements INTEGER NOT NULL,
    
    FOREIGN KEY (Cle_Utilisateurs) REFERENCES utilisateurs(Id_Utilisateurs),
    FOREIGN KEY (Cle_Etablissements) REFERENCES etablissements(Id_Etablissements),

    PRIMARY KEY(Cle_Utilisateurs, Cle_Etablissements)
);